# This file was generated by Chef
# Do NOT modify this file by hand.

# use the socket we configured in our unicorn.rb
upstream unicorn_server {
  server unix:<%= node[:puka][:deploy] %>/current/tmp/sockets/unicorn.sock
      fail_timeout=0;
}

# configure the virtual host
<% if node[:puka][:ssl] %>
  server {
    listen      80;
    listen [::]:80;
    server_name <%= node[:puka][:fqdn] %>;
    return 301 https://$server_name$request_uri;
  }

  server {
    listen      443 ssl http2;
    listen [::]:443 ssl http2;
<% else %>
  server {
    listen      80;
    listen [::]:80;
<% end %>
    server_name <%= node[:puka][:fqdn] %>;
    root <%= node[:puka][:root] %>;

    client_max_body_size 4G;
    keepalive_timeout 5;

    # serve static files from root
    location / {
      try_files $uri /index.html;
      add_header X-Content-Type-Options nosniff;
      add_header X-Frame-Options SAMEORIGIN;
      <% if node[:puka][:ssl] %>
        add_header Strict-Transport-Security "max-age=31536000";
      <% end %>
    }

    # letsencrypt authentication
    location <%= node[:nginx][:acme_path] %> {
    root <%= node[:nginx][:root] %>;
    }


    # pass to the upstream unicorn server
    location ~ /(api|auth)/ {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_pass http://unicorn_server;
      <% if node[:puka][:ssl] %>
        add_header Strict-Transport-Security "max-age=31536000";
      <% end %>
    }
  }
